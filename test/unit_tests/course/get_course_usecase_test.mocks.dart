// Mocks generated by Mockito 5.4.2 from annotations
// in learning/test/unit_tests/course/get_course_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:learning/src/data/datasource/course_remote_datasource.dart'
    as _i2;
import 'package:learning/src/data/model/submit_answer_request_model.dart'
    as _i9;
import 'package:learning/src/data/repository/course_repository_impl.dart'
    as _i3;
import 'package:learning/src/domain/entity/course_list_response_entity.dart'
    as _i5;
import 'package:learning/src/domain/entity/exercise_list_response_entity.dart'
    as _i7;
import 'package:learning/src/domain/entity/exercise_result_response_entity.dart'
    as _i6;
import 'package:learning/src/domain/entity/question_list_response_entity.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCourseRemoteDatasource_0 extends _i1.SmartFake
    implements _i2.CourseRemoteDatasource {
  _FakeCourseRemoteDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CourseRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseRepositoryImpl extends _i1.Mock
    implements _i3.CourseRepositoryImpl {
  @override
  _i2.CourseRemoteDatasource get remoteDatasource => (super.noSuchMethod(
        Invocation.getter(#remoteDatasource),
        returnValue: _FakeCourseRemoteDatasource_0(
          this,
          Invocation.getter(#remoteDatasource),
        ),
        returnValueForMissingStub: _FakeCourseRemoteDatasource_0(
          this,
          Invocation.getter(#remoteDatasource),
        ),
      ) as _i2.CourseRemoteDatasource);

  @override
  _i4.Future<List<_i5.CourseDataEntity>?> getCourses(String? majorName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourses,
          [majorName],
        ),
        returnValue: _i4.Future<List<_i5.CourseDataEntity>?>.value(),
        returnValueForMissingStub:
            _i4.Future<List<_i5.CourseDataEntity>?>.value(),
      ) as _i4.Future<List<_i5.CourseDataEntity>?>);

  @override
  _i4.Future<_i6.ExerciseResultResponseEntity?> getExerciseResult(
          String? exerciseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExerciseResult,
          [exerciseId],
        ),
        returnValue: _i4.Future<_i6.ExerciseResultResponseEntity?>.value(),
        returnValueForMissingStub:
            _i4.Future<_i6.ExerciseResultResponseEntity?>.value(),
      ) as _i4.Future<_i6.ExerciseResultResponseEntity?>);

  @override
  _i4.Future<List<_i7.ExerciseDataEntity>?> getExercisesByCourse(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExercisesByCourse,
          [courseId],
        ),
        returnValue: _i4.Future<List<_i7.ExerciseDataEntity>?>.value(),
        returnValueForMissingStub:
            _i4.Future<List<_i7.ExerciseDataEntity>?>.value(),
      ) as _i4.Future<List<_i7.ExerciseDataEntity>?>);

  @override
  _i4.Future<List<_i8.QuestionListDataEntity>?> getQuestionsByExercise(
          String? exerciseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestionsByExercise,
          [exerciseId],
        ),
        returnValue: _i4.Future<List<_i8.QuestionListDataEntity>?>.value(),
        returnValueForMissingStub:
            _i4.Future<List<_i8.QuestionListDataEntity>?>.value(),
      ) as _i4.Future<List<_i8.QuestionListDataEntity>?>);

  @override
  _i4.Future<bool> submitExerciseAnswer(
          _i9.SubmitAnswerRequestModel? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitExerciseAnswer,
          [request],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
